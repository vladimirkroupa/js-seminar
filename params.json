{"name":"Js-seminar","tagline":"","body":"### Functions\r\n\r\n## Function literal\r\n1. [function literal](https://jsbin.com/keyujeq/7/edit?js,console,output)\r\n\r\n## Function is an object\r\n1. [function is an object](https://jsbin.com/vuzome/7/edit?js,console,output)\r\n\r\n## Function scope\r\nThere is no block scope in JS, but there is function scope.\r\n1. [no block scope](https://jsbin.com/jayiqa/2/edit?js,console,output)\r\n2. [function scope](https://jsbin.com/fosugi/1/edit?js,console,output)\r\n\r\n## Recursion\r\nThere is no tail call optimization -> limit on levels on recursion.\r\n1. [no tail call optimization](https://jsbin.com/zukowo/1/edit?js,console,output)\r\n\r\n## Arguments\r\nFunction receives extra _arguments_ parameter;\r\n1. [arguments object](https://jsbin.com/kivape/4/edit?js,console,output)\r\n2. [arguments object length](https://jsbin.com/lutewa/2/edit?js,console,output)\r\n3. [arguments object no array methods](https://jsbin.com/kuwema/1/edit?js,console,output)\r\n\r\n## Invocation\r\nApart from _arguments_ parameter, function receives _this_ parameter. Value of this is determined by *invocation pattern*.\r\n\r\nThere are four:\r\n### Method Invocation Pattern\r\n1.\r\n### Function Invocation Pattern\r\n1.\r\n### Constructor Invocation Pattern\r\n1.\r\n### Apply Invocation Pattern\r\n1.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}